{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "EC vector",
  "description": "Test vector for erasure coding",
  "type": "object",
  "properties": {
    "data": {
      "type": "string",
      "contentEncoding": "base64"
    },
    "work_package": {
      "type": "object",
      "properties": {
        "chunks": {
          "type": "array",
          "items": {
            "type": "string",
            "contentEncoding": "base64"
          }
        },
        "chunks_root": {
          "type": "string",
          "contentEncoding": "base64"
        },
        "chunks_ec": {
          "type": "array",
          "items": {
            "type": "string",
            "contentEncoding": "base64"
          }
        }
      },
      "additionalProperties": false
    },
    "segment": {
      "type": "object",
      "properties": {
        "segments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "encoded": {
                "type": "array",
                "items": {
                  "type": "string",
                  "contentEncoding": "base64"
                }
              },
              "segment_ec": {
                "type": "array",
                "items": {
                  "type": "string",
                  "contentEncoding": "base64"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "segments_root": {
          "type": "string",
          "contentEncoding": "base64"
        }
      },
      "additionalProperties": false
    },
    "page_proof": {
      "type": "object",
      "properties": {
        "page_proofs": {
          "type": "array",
          "items": {
            "type": "string",
            "contentEncoding": "base64"
          }
        },
        "segments_root": {
          "type": "string",
          "contentEncoding": "base64"
        }
      }
  "additionalProperties": false
    }
  },
  "additionalProperties": false
}